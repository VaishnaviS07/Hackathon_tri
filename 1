import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Load the dataset from Excel file
data = pd.read_excel("hcp_dataset.xlsx")  # Replace "your_dataset.xlsx" with the actual filename
print(data.columns)
# Select relevant features for segmentation analysis
features = ['Primary  specialty code', 'Secondary specialty code', ' Doctor state code']
X = data[features]

# Data preprocessing: handle missing values, one-hot encode categorical variables, scale the data
X.fillna(0, inplace=True)  # Replace missing values with 0, you can choose a different strategy if needed
X_encoded = pd.get_dummies(X)  # One-hot encode categorical variables
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X_encoded)


# Determine the optimal number of clusters using the elbow method
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X_scaled)
    wcss.append(kmeans.inertia_)


# Plot the elbow curve to visualize the optimal number of clusters
import matplotlib.pyplot as plt
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()
